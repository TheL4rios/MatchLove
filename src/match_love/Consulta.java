package match_love;

import java.util.ArrayList;
import java.util.Map;
import org.jpl7.Query;
import org.jpl7.Term;
import static match_love.Metodos.getNameWithNormalFormat;
import rojerusan.RSAnimation;

/**
 *
 * @author Kevin
 */
public class Consulta extends javax.swing.JFrame {

    private ArrayList<String> namesOfProlog; // Almacenar los nombres de personas del archivo Prolog
    private Popup popup; // Mostrar popup de match o no match

    /**
     * Creates new form Consulta
     */
    public Consulta() {
        initComponents();
        init();
        RSAnimation.setMoverDerecha(-50, 300, 3, 5, this);
    }

    private void init() {
        // Poner en el centro de la pantalla
        setLocationRelativeTo(null);
        
        setTitle(" ♥ Consultar compatibilidad  ♥");

        //Inicializar ArrayList
        namesOfProlog = new ArrayList();

        // Obtener los dstos de Prolog (nombres)
        getDataProlog();

        // Llenar el comboBox de la persona 1
        fillComboBoxPerson1();
    }

    // Obtener los nombres de todas las personas del archivo Prolog
    private void getDataProlog() {
        Query consult = new Query("consult('knowledge_database.pl')");
        if (consult.hasSolution()) {
            consult = new Query("nombre(X)");
            if (consult.hasSolution()) {
                Map<String, Term>[] result = consult.allSolutions();
                for (Map<String, Term> res : result) {
                    String name = res.get("X").toString();
                    if (name.contains("'")) {
                        name = name.substring(1, name.length() - 1);
                    }
                    namesOfProlog.add(name);
                }
            }
        }
        consult.close();
    }

    // Llenar el comboBox de la persona 1 con todos los nombres
    private void fillComboBoxPerson1() {
        namesOfProlog.forEach((name) -> {
            cmbPerson1.addItem(getNameWithNormalFormat(name));
        });
    }

    // Mostrar popup de un determinado tipo
    private void showPopup(Popup.POPUP_TYPE option) {
        if (popup != null) {
            popup.dispose();
        }
        popup = new Popup(option);
        popup.setVisible(true);
        popup.move();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblVerify = new javax.swing.JLabel();
        lblPerson1 = new javax.swing.JLabel();
        cmbPerson1 = new javax.swing.JComboBox<>();
        cmbPerson2 = new javax.swing.JComboBox<>();
        lblPerson2 = new javax.swing.JLabel();
        btnVerifyCompatibility = new javax.swing.JButton();
        lblNamePerson1 = new javax.swing.JLabel();
        lblNamePerson2 = new javax.swing.JLabel();
        lblValityCouple = new javax.swing.JLabel();
        lblCompatibilityPercent = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnStart = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("( ˘⌣˘)♡(˘⌣˘ )");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/images/icons/heart.png")).getImage());
        setMinimumSize(new java.awt.Dimension(413, 310));
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblVerify.setBackground(new java.awt.Color(255, 0, 204));
        lblVerify.setFont(new java.awt.Font("Eras Bold ITC", 1, 24)); // NOI18N
        lblVerify.setForeground(new java.awt.Color(255, 0, 0));
        lblVerify.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vintage/rompecabezas (2).png"))); // NOI18N
        lblVerify.setText("Verificar compatibilidad");
        jPanel2.add(lblVerify, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 33, -1, -1));

        lblPerson1.setFont(new java.awt.Font("Franklin Gothic Book", 1, 14)); // NOI18N
        lblPerson1.setText("Persona 1");
        jPanel2.add(lblPerson1, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 95, -1, -1));

        cmbPerson1.setFont(new java.awt.Font("Franklin Gothic Book", 1, 14)); // NOI18N
        cmbPerson1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elije una persona" }));
        cmbPerson1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPerson1ItemStateChanged(evt);
            }
        });
        jPanel2.add(cmbPerson1, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 92, 296, -1));

        cmbPerson2.setFont(new java.awt.Font("Franklin Gothic Book", 1, 14)); // NOI18N
        cmbPerson2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elije una persona" }));
        cmbPerson2.setEnabled(false);
        cmbPerson2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPerson2ItemStateChanged(evt);
            }
        });
        jPanel2.add(cmbPerson2, new org.netbeans.lib.awtextra.AbsoluteConstraints(499, 92, 296, -1));

        lblPerson2.setFont(new java.awt.Font("Franklin Gothic Book", 1, 14)); // NOI18N
        lblPerson2.setText("Persona 2");
        jPanel2.add(lblPerson2, new org.netbeans.lib.awtextra.AbsoluteConstraints(419, 98, -1, -1));

        btnVerifyCompatibility.setFont(new java.awt.Font("Franklin Gothic Book", 1, 14)); // NOI18N
        btnVerifyCompatibility.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vintage/corazon.png"))); // NOI18N
        btnVerifyCompatibility.setText("Verificar compatibilidad");
        btnVerifyCompatibility.setEnabled(false);
        btnVerifyCompatibility.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerifyCompatibilityActionPerformed(evt);
            }
        });
        jPanel2.add(btnVerifyCompatibility, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 130, -1, -1));

        lblNamePerson1.setFont(new java.awt.Font("Franklin Gothic Book", 1, 14)); // NOI18N
        lblNamePerson1.setForeground(new java.awt.Color(255, 0, 0));
        lblNamePerson1.setText("Persona 1:");
        jPanel2.add(lblNamePerson1, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 187, -1, -1));

        lblNamePerson2.setFont(new java.awt.Font("Franklin Gothic Book", 1, 14)); // NOI18N
        lblNamePerson2.setForeground(new java.awt.Color(255, 0, 0));
        lblNamePerson2.setText("Persona 2:");
        jPanel2.add(lblNamePerson2, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 221, -1, -1));

        lblValityCouple.setFont(new java.awt.Font("Franklin Gothic Book", 1, 14)); // NOI18N
        lblValityCouple.setForeground(new java.awt.Color(255, 0, 0));
        lblValityCouple.setText("Pareja válida (si ambos sexos se atraen): ");
        jPanel2.add(lblValityCouple, new org.netbeans.lib.awtextra.AbsoluteConstraints(484, 183, -1, -1));

        lblCompatibilityPercent.setFont(new java.awt.Font("Franklin Gothic Book", 1, 14)); // NOI18N
        lblCompatibilityPercent.setForeground(new java.awt.Color(255, 0, 0));
        lblCompatibilityPercent.setText("Porcentaje de compatibilidad: ");
        jPanel2.add(lblCompatibilityPercent, new org.netbeans.lib.awtextra.AbsoluteConstraints(484, 220, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vintage/3011564-arms-couple-gay-hold-in_101297 (2).png"))); // NOI18N
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 210, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 820, 330));

        btnStart.setFont(new java.awt.Font("Franklin Gothic Book", 1, 14)); // NOI18N
        btnStart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vintage/salida.png"))); // NOI18N
        btnStart.setText("Inicio");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });
        jPanel1.add(btnStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 400, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vintage/corazones.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-80, -80, 1060, 560));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 920, 480));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Método para verificar la compatibilidad de dos personas
    private void btnVerifyCompatibilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerifyCompatibilityActionPerformed
        int selectedIndexCmbPerson1 = cmbPerson1.getSelectedIndex(),
                selectedIndexCmbPerson2 = cmbPerson2.getSelectedIndex(),
                indexOfPerson2 = selectedIndexCmbPerson2 >= selectedIndexCmbPerson1 ? selectedIndexCmbPerson2 + 1 : selectedIndexCmbPerson2;
        String namePrologPerson1 = namesOfProlog.get(cmbPerson1.getSelectedIndex() - 1),
                namePrologPerson2 = namesOfProlog.get(indexOfPerson2 - 1);
        // System.out.println("Persona 1: " + namePrologPerson1 + "\nPersona 2: " + namePrologPerson2);
        Query consult = new Query("consult('knowledge_database.pl')");
        if (consult.hasSolution()) {
            double points = 0;
            consult = new Query("validarPareja(" + namePrologPerson1 + "," + namePrologPerson2 + ")");
            if (consult.hasSolution()) {
                for (int j = 1; j <= 23; j++) {
                    consult = new Query("p" + j + "(" + namePrologPerson1 + ", " + namePrologPerson2 + ", Z)"); // Devueleve en Z la cantidad de puntos
                    if (consult.hasSolution()) {
                        double point = Double.parseDouble(consult.oneSolution().get("Z").toString());
                        points += point;
                        // System.out.println("Para la pregunta "+j+" obtuvieron "+point+" puntos");
                    }
                }
                lblValityCouple.setText("Paraje válida (si ambos sexos se atraen): Si");
            } else {
                lblValityCouple.setText("Paraje válida (si ambos sexos se atraen): No");
            }
            lblNamePerson1.setText("Persona 1: " + cmbPerson1.getSelectedItem());
            lblNamePerson2.setText("Persona 2: " + cmbPerson2.getSelectedItem());
            lblCompatibilityPercent.setText("Porcentaje de compatibilidad: " + points + " %");
            if (points > 50) { // Si obtuvieron más de 50 puntos pueden ser pareja e hicieron match
                showPopup(Popup.POPUP_TYPE.THEY_MATCH);
            } else { // Si obtuvieron 50 o menos solo podrían ser pareja o amigos
                showPopup(Popup.POPUP_TYPE.THEY_NO_MATCH);
            }
        }
    }//GEN-LAST:event_btnVerifyCompatibilityActionPerformed


    /* Evento para agregar las personas al comboBox de la Persona 2, omitiendo a la Persona 
       seleccionada del comboBox 1 */
    private void cmbPerson1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPerson1ItemStateChanged
        resetLabels();
        if (cmbPerson1.getSelectedIndex() != 0) {
            cmbPerson2.removeAllItems();
            cmbPerson2.addItem("Elije una persona");
            for (int i = 1; i < cmbPerson1.getItemCount(); i++) {
                if (i != cmbPerson1.getSelectedIndex()) {
                    cmbPerson2.addItem(cmbPerson1.getItemAt(i));
                }
            }
            cmbPerson2.setEnabled(true);
        } else {
            cmbPerson2.setSelectedIndex(0);
            cmbPerson2.setEnabled(false);
            btnVerifyCompatibility.setEnabled(false);
        }
    }//GEN-LAST:event_cmbPerson1ItemStateChanged

    /* Evento para activar o desactivar el botón de verificar en base a lo seleccionado
       en el comboBox de la persona 2 */
    private void cmbPerson2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPerson2ItemStateChanged
        resetLabels();
        if (cmbPerson2.getSelectedIndex() != 0) {
            btnVerifyCompatibility.setEnabled(true);
        } else {
            btnVerifyCompatibility.setEnabled(false);
        }
    }//GEN-LAST:event_cmbPerson2ItemStateChanged

    // Ir a la ventanan Inicial
    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        new Inicial().setVisible(true);
        if (popup != null) {
            popup.dispose();
        }
        dispose();
    }//GEN-LAST:event_btnStartActionPerformed

    // Evento que se activa al cerrar la ventana
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        new Inicial().setVisible(true);
        if (popup != null) {
            popup.dispose();
        }
        dispose();
    }//GEN-LAST:event_formWindowClosing

    // Poner el texto por defecto en los labels
    private void resetLabels() {
        lblNamePerson1.setText("Persona 1: ");
        lblNamePerson2.setText("Persona 2: ");
        lblValityCouple.setText("Paraje válida (si ambos sexos se atraen): ");
        lblCompatibilityPercent.setText("Porcentaje de compatibilidad: ");
        if(popup != null) { // Cerrar el popup también, porque se borraron los datos anteriores
            popup.dispose();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Consulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Consulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Consulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Consulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Consulta().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnVerifyCompatibility;
    private javax.swing.JComboBox<String> cmbPerson1;
    private javax.swing.JComboBox<String> cmbPerson2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblCompatibilityPercent;
    private javax.swing.JLabel lblNamePerson1;
    private javax.swing.JLabel lblNamePerson2;
    private javax.swing.JLabel lblPerson1;
    private javax.swing.JLabel lblPerson2;
    private javax.swing.JLabel lblValityCouple;
    private javax.swing.JLabel lblVerify;
    // End of variables declaration//GEN-END:variables
}
